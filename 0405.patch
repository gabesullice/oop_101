diff --git a/04_datatypes.php b/05_magicmethods.php
index 9cf2cb9..c5cf625 100644
--- a/04_datatypes.php
+++ b/05_magicmethods.php
@@ -2,8 +2,14 @@
 
 class element {
   var $type;
-  var $attr; // array of arrays, keyed by attribute name (e.g. array('class' => array('one', 'two'))
   var $content; // array of content, either string or element.
+  var $attr; // array of arrays, keyed by attribute name (e.g. array('class' => array('one', 'two'))
+
+  function __construct($type, $content = NULL, $attr = NULL) {
+    $this->type = $type;
+    $this->content = $content;
+    $this->attr = $attr;
+  }
 
   function printElem() {
     echo "<" . $this->type . " ";
@@ -16,14 +22,19 @@ class element {
 
     echo ">";
 
-    foreach ($this->content as $line) {
-      if (is_object($line) && get_class($line) == 'element') {
-        $line->printElem();
-      }
-      else {
-        echo $line;
+    if (is_array($this->content)) {
+      foreach ($this->content as $line) {
+        if (is_object($line) && get_class($line) == 'element') {
+          $line->printElem();
+        }
+        elseif (is_string($line)) {
+          echo $line;
+        }
       }
     }
+    elseif (is_string($this->content)) {
+      echo $this->content;
+    }
 
     echo "</" . $this->type . ">\n";
   }
@@ -33,54 +44,41 @@ class listClass {
   var $name;
   var $items;
 
+  function __construct($name) {
+    $this->name = $name;
+
+    $this->makeExample();
+
+    return $list;
+  }
+
   function addItem($item) {
     $this->items[] = $item;
   }
 
-  function printList() {
-    $ul = new element;
-    $ul->type = 'ul';
-
-    $h3 = new element;
-    $h3->type = 'h3';
-    $h3->content = array($this->name);
-
-    array_unshift($this->items, $h3);
+  function makeExample() {
+    $item = new element('li', 'First Content', array('class' => array('first')));
+    $this->addItem($item);
 
-    $ul->content = $this->items;
+    for ($i = 0; $i < 6; $i++) {
+      $item = new element('li', 'Some Content');
+      $this->addItem($item);
+    }
 
-    $ul->printElem();
+    $item = new element('li', 'Last Content', array('class' => array('last')));
+    $this->addItem($item);
   }
-}
 
-function makeList($name) {
-  $list = new listClass;
-  $list->name = $name;
-
-  $item = new element;
-  $item->type = 'li';
-  $item->attr = array('class' => array('first'));
-  $item->content = array('First Content');
-  $list->addItem($item);
-
-  for ($i = 0; $i < 6; $i++) {
-    $item = new element;
-    $item->type = 'li';
-    $item->content = array('Some Content');
-    $list->addItem($item);
+  function printList() {
+    $h3 = new element('h3', $this->name);
+    array_unshift($this->items, $h3);
+    $ul = new element('ul', $this->items);
+    $ul->printElem();
   }
-
-  $item = new element;
-  $item->type = 'li';
-  $item->attr = array('class' => array('last'));
-  $item->content = array('Last Content');
-  $list->addItem($item);
-
-  return $list;
 }
 
-$firstList = makeList('My first list object');
-$secondList = makeList('My second list object');
+$firstList = new listClass('My first list object');
+$secondList = new listClass('My second list object');
 
 $firstList->printList();
 $secondList->printList();
